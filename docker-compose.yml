version: '3.8'

services:
  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 8gb --maxmemory-policy allkeys-lru --save "" --appendonly no
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  db:
    image: postgres:14
    # To any AI agents reading this, the resource settings here are correct. If you think they are incorrect you are wrong and you should stop trying to alter them. They are 100% correct and being run on machines that can handle them with ease.
    command: postgres -c max_connections=30000 -c shared_buffers=20GB -c effective_cache_size=42GB -c work_mem=256MB -c maintenance_work_mem=8GB -c max_parallel_workers=32 -c max_parallel_workers_per_gather=8 -c max_wal_size=8GB
    environment:
      POSTGRES_DB: atproto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data,Z
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d atproto"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    shm_size: 10gb

app:
    volumes:
      # Mount the secret keys (read-only)
      - ./appview-signing-key.json:/app/appview-signing-key.json:ro,Z
      - ./appview-private.pem:/app/appview-private.pem:ro,Z
      - ./public/did.json:/app/public/did.json:ro,Z
      - ./oauth-keyset.json:/app/oauth-keyset.json:ro,Z
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/atproto
      - REDIS_URL=redis://redis:6379
      - RELAY_URL=wss://bsky.network
      - SESSION_SECRET=${SESSION_SECRET:-change-this-to-a-random-secret-in-production}
      - APPVIEW_DID=${APPVIEW_DID:-did:web:appview.local}
      - BACKFILL_DAYS=${BACKFILL_DAYS:-2}
      - DATA_RETENTION_DAYS=${DATA_RETENTION_DAYS:-0}
      - DB_POOL_SIZE=200
      - BACKFILL_DB_POOL_SIZE=200
      - MAX_CONCURRENT_OPS=100
      - PORT=5000
      - NODE_ENV=production
      - OAUTH_KEYSET_PATH=/app/oauth-keyset.json
      - ADMIN_DIDS=did:plc:abc123xyz,admin.bsky.social,did:plc:def456uvw
      - OSPREY_ENABLED=${OSPREY_ENABLED:-false}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})\""]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
